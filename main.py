from dotenv import dotenv_values
from openai import OpenAI
import requests
from PIL import Image
from io import BytesIO

config = dotenv_values(".env")

OPENAPI_API_KEY = config["OPENAI_API_KEY"]

client = OpenAI(
    api_key=OPENAPI_API_KEY,
)

def generate_image(prompt):
    response = client.images.generate(
        model="dall-e-3",
        prompt=prompt,
    )
    result = response.data[0].url
    return result

def save_image(image_url, filename):
    response = requests.get(image_url)

    # Open the image and save it
    image = Image.open(BytesIO(response.content))
    image.save(filename)

breeds = [
    "Labrador Retriever",
    "German Shepherd",
    "Poodle",
    "English Bulldog",
    "Golden Retriever",
    "Beagle",
    "Rottweiler",
    "Chihuahua",
    "Schnauzer",
    "Shih Tzu",
    "Dachshund",
    "Pit Bull",
    "Doberman",
    "Pug",
    "Cocker Spaniel",
    "Border Collie",
    "Akita",
    "Boxer",
    "Siberian Husky",
    "Alaskan Malamute",
    "Belgian Shepherd",
    "Miniature Pinscher",
    "French Bulldog",
    "Dalmatian",
    "Saint Bernard",
    "Weimaraner",
    "Basset Hound",
    "Yorkshire Terrier",
    "Mastiff",
    "Greyhound",
    "Whippet",
    "Cavalier King Charles Spaniel",
    "Chow Chow",
    "Shar Pei",
    "Cane Corso",
    "Bull Terrier",
    "Shiba Inu",
    "Samoyed",
    "Papillon",
    "Boston Terrier",
    "Staffordshire Bull Terrier",
    "Basenji",
    "Pomeranian",
    "Lhasa Apso",
    "Maltese",
    "Collie",
    "English Springer Spaniel",
    "Borzoi",
    "Airedale Terrier",
    "Afghan Hound",
    "Scottish Terrier",
    "Irish Wolfhound",
    "Saluki",
    "Great Dane",
    "Irish Setter",
    "Pharaoh Hound",
    "Komondor",
    "Newfoundland",
    "Leonberger",
    "Great Pyrenees",
    "Old English Sheepdog",
    "Briard",
    "Tosa Inu",
    "Pekingese",
    "Keeshond",
    "Alaskan Klee Kai",
    "Japanese Chin",
    "Belgian Tervuren",
    "Vizsla",
    "Rhodesian Ridgeback",
    "Bracco Italiano",
    "Petit Basset Griffon Vend√©en",
    "Lagotto Romagnolo",
    "Barbet",
    "Norwegian Elkhound",
    "Finnish Lapphund",
    "Spanish Water Dog",
    "Irish Water Spaniel",
    "Coton de Tulear",
    "Norfolk Terrier",
    "Norwich Terrier",
    "Pembroke Welsh Corgi",
    "Cardigan Welsh Corgi",
    "Australian Shepherd",
    "Belgian Malinois",
    "Australian Cattle Dog",
    "Jack Russell Terrier",
    "Skye Terrier",
    "West Highland White Terrier",
    "Lakeland Terrier",
    "Soft Coated Wheaten Terrier",
    "Bedlington Terrier",
    "Chinese Crested",
    "Lowchen",
    "Perro de Presa Canario",
    "Neapolitan Mastiff",
    "Tibetan Mastiff",
    "Maremma Sheepdog",
    "Kuvasz",
    "Tibetan Spaniel",
    "Nova Scotia Duck Tolling Retriever",
    "Clumber Spaniel",
    "Glen of Imaal Terrier",
    "American Pit Bull Terrier",
    "American Staffordshire Terrier",
    "Fila Brasileiro",
    "Presa Mallorquin",
    "Estrela Mountain Dog",
    "Kerry Blue Terrier",
    "Tibetan Terrier",
    "Chinook",
    "American Water Spaniel",
    "Canaan Dog",
    "Belgian Laekenois",
    "Carolina Dog",
    "English Foxhound",
    "Harrier",
    "Plott Hound",
    "Redbone Coonhound",
    "Bluetick Coonhound",
    "American Foxhound",
    "Treeing Walker Coonhound",
    "Boykin Spaniel",
    "Lagotto Romagnolo",
    "Miniature Bull Terrier",
    "Smooth Fox Terrier",
    "Wire Fox Terrier",
    "Rat Terrier",
    "American Hairless Terrier",
    "Japanese Spitz",
    "Schipperke",
    "Dutch Shepherd",
    "Bergamasco Shepherd",
    "Pyrenean Shepherd",
    "Greater Swiss Mountain Dog",
    "Entlebucher Mountain Dog",
    "Hovawart",
    "Stabyhoun",
    "Cesky Terrier",
    "Irish Terrier",
    "Manchester Terrier",
    "Wirehaired Vizsla",
    "Icelandic Sheepdog",
    "Polish Lowland Sheepdog",
    "Portuguese Podengo",
    "Sloughi",
    "Otterhound",
    "Norwegian Lundehund",
    "Berger Picard",
    "Xoloitzcuintli",
]

for breed in breeds:
    prompt = f"""Create a hyper-realistic image of an adult dog of the breed {breed} in a natural environment."""
    image_url = generate_image(prompt)
    formatted_breed = breed.lower().replace(" ", "-").replace("(", "-").replace(")", "-")
    save_image(image_url, f"images/{formatted_breed}.jpg")